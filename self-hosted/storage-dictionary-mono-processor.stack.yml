version: "3.7"

x-chain-name: &chain-name "hydration"
x-postgres-db: &postgres-db "storage_dictionary_db"
x-postgres-user: &postgres-user "postgres"
x-postgres-password: &postgres-password "postgres"

x-storage-dictionary-db-creds: &storage-dictionary-db-creds
  DB_PORT: 5432
  DB_NAME: *postgres-db
  DB_USER: *postgres-user
  DB_PASS: *postgres-password

networks:
  default:
    driver: overlay

volumes:
  storage-dictionary-db:
    driver: local

services:
  storage-dictionary-db:
    image: postgres:15
    environment:
      POSTGRES_DB: *postgres-db
      POSTGRES_USER: *postgres-user
      POSTGRES_PASSWORD: *postgres-password
    volumes:
      - storage-dictionary-db:/var/lib/postgresql/data
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure

  storage-dictionary-processor:
    image: ghcr.io/mckrava/storage-dictionary-indexer:wip-feat-init-monorepo
    depends_on:
      - storage-dictionary-db
    environment:
      #
      # REQUIRED PARAMETERS
      #
      NODE_ENV: "self-hosted"
      CHAIN: *chain-name
      <<: *storage-dictionary-db-creds
      DB_HOST: "storage-dictionary-db"
      RPC_URL: "wss://archive.rpc.hydration.cloud"
      # Set IGNORE_ARCHIVE_DATA_SOURCE to true to enable the indexer to operate without requiring the SQD archive.
      IGNORE_ARCHIVE_DATA_SOURCE: "false"
      # If not set, its value will be automatically extracted from the .env file as a fallback.
      GATEWAY_HYDRATION_HTTPS: "https://v2.archive.subsquid.io/network/hydradx"
      OMNIPOOL_ADDRESS: "0x6d6f646c6f6d6e69706f6f6c0000000000000000000000000000000000000000"

      #
      # OPTIONAL PARAMETERS
      #
      PROCESS_FROM_BLOCK: 1708000
      PROCESS_TO_BLOCK: -1
      PROCESS_LBP_POOLS: "true"
      PROCESS_XYK_POOLS: "true"
      PROCESS_OMNIPOOLS: "true"
      PROCESS_STABLEPOOLS: "true"

      #
      # Configuration settings for running the indexer in multiprocessor mode.
      # Refer to the documentation for detailed explanations.
      #
      STATE_SCHEMA_NAME: "squid_processor"
      ASSETS_ACTUALISATION_PROC_STATE_SCHEMA_NAME: "squid_processor"
      # Sub-batch is a chunk of blocks from Processor batch handler. Processor handles blocks by batches (batch size cannot
      # be configured and is defining automatically by archive) and on reindexing mode Processor batch can contain up to 100K
      # blocks so it can cause RPC calls rate limit errors. By implemented logic, processor splits main batch to smaller
      # chunks and processes them sequentially. INDEXER_MAX_SUB_BATCH_SIZE can be split between multiple processors
      # of particular indexer in case indexer has multiple processor running (INDEXER_MAX_SUB_BATCH_SIZE / INDEXER_SUB_PROCESSORS_NUMBER)
      INDEXER_MAX_SUB_BATCH_SIZE: 1500
      # Maximum timeout between processing single sub-batch.
      SUB_BATCH_MAX_TIMEOUT_MS: 500
      # Number of deployed sub-processors in particular indexer. Should be defined manually as can have incorrect value
      # in case of automatic detection of processors in indexer.
      INDEXER_SUB_PROCESSORS_NUMBER: 1
      # Forces current processor instance to crack all assets state (AssetRegistry.assets store).
      ASSETS_TRACKER_PROCESSOR: "true"
    networks:
      - default
    command:
      - sh
      - -c
      - "sqd migration:apply && sqd process:prod"
    deploy:
      restart_policy:
        condition: on-failure

  storage-dictionary-api:
    image: ghcr.io/mckrava/storage-dictionary-indexer:wip-feat-init-monorepo
    depends_on:
      - storage-dictionary-processor
    environment:
      NODE_ENV: "self-hosted"
      CHAIN: *chain-name
      GQL_PORT: 8090
      <<: *storage-dictionary-db-creds
      DB_HOST: "storage-dictionary-db"
      #
      # Configuration settings for running the indexer in multiprocessor mode.
      #
      # Config for squidStatus API query to show statuses of all running processors with information about target
      # blocks range of each processor.
      SUB_PROCESSORS_RANGES: "squid_processor:1708000:-1"
    ports:
      - "8090:8090"
    networks:
      - default
    command:
      - sh
      - -c
      - "sqd api:prod"
    deploy:
      restart_policy:
        condition: on-failure
